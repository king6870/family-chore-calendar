// Minimal schema - only fields that exist in production database
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  familyId      String?
  age           Int?
  nickname      String?
  isAdmin       Boolean   @default(false)
  isOwner       Boolean   @default(false)
  totalPoints   Int       @default(0)
  // Note: createdAt and updatedAt removed - don't exist in DB

  accounts         Account[]
  sessions         Session[]
  family           Family?   @relation(fields: [familyId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Family {
  id         String   @id @default(cuid())
  name       String
  inviteCode String   @unique
  // Note: createdAt and updatedAt removed - may not exist in DB

  members    User[]
}
