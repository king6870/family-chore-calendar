#!/bin/bash

echo "🆕 DEPLOY TO NEW STAGING REPOSITORY"
echo "==================================="
echo ""
echo "🎯 Target: Brand New GitHub Repository + Vercel Project"
echo "📁 Repository: family-chore-calendar-staging"
echo "🌐 URL: [Will be generated by Vercel]"
echo "🗄️  Database: Fresh database with clean schema"
echo "🔐 OAuth: New Google OAuth client"
echo "🔒 Complete Independence: Separate from production"
echo ""

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    echo "❌ Please run this script from your project root directory"
    echo "   (where package.json is located)"
    exit 1
fi

echo "📋 NEW REPOSITORY SETUP CHECKLIST"
echo "================================="
echo ""
echo "Before deploying, make sure you've completed:"
echo ""
echo "✅ 1. Created new GitHub repository"
echo "   - Repository: family-chore-calendar-staging"
echo "   - Visibility: Private (recommended)"
echo "   - URL: https://github.com/king6870/family-chore-calendar-staging"
echo ""
echo "✅ 2. Set up local repository"
echo "   - Cloned new repository"
echo "   - Copied project files"
echo "   - Committed initial code"
echo ""
echo "✅ 3. Created new Vercel project"
echo "   - Imported new GitHub repository"
echo "   - Project name: family-chore-calendar-staging"
echo "   - Framework: Next.js"
echo ""
echo "✅ 4. Created new database"
echo "   - Option A: Vercel Postgres"
echo "   - Option B: New Prisma Accelerate project"
echo "   - Got DATABASE_URL"
echo ""
echo "✅ 5. Created new Google OAuth client"
echo "   - Name: Family Chore Calendar - Staging"
echo "   - Got Client ID and Secret"
echo ""
echo "✅ 6. Set environment variables in Vercel"
echo "   - DATABASE_URL, NEXTAUTH_URL, GOOGLE_CLIENT_ID, etc."
echo ""

read -p "Have you completed all the above steps? (y/n): " setup_complete

if [ "$setup_complete" != "y" ] && [ "$setup_complete" != "Y" ]; then
    echo ""
    echo "⚠️  PLEASE COMPLETE SETUP FIRST"
    echo "==============================="
    echo ""
    echo "📋 Setup guide available: setup-new-github-repo.md"
    echo "🔄 Run this script again after completing setup"
    exit 1
fi

echo ""
echo "📁 REPOSITORY INFORMATION"
echo "========================"
echo ""
read -p "Enter your new staging repository name (default: family-chore-calendar-staging): " repo_name
repo_name=${repo_name:-family-chore-calendar-staging}

read -p "Enter your GitHub username: " github_username
read -s -p "Enter your GitHub Personal Access Token: " github_token
echo ""
echo ""

# Validate inputs
if [ -z "$github_username" ] || [ -z "$github_token" ]; then
    echo "❌ Username and token are required"
    exit 1
fi

# Check if we're in a git repository
if [ ! -d ".git" ]; then
    echo "❌ This directory is not a git repository"
    echo "💡 Make sure you're in your new staging repository directory"
    exit 1
fi

# Check current branch
current_branch=$(git branch --show-current)
echo "📍 Current branch: $current_branch"

# Check for uncommitted changes
if ! git diff-index --quiet HEAD --; then
    echo "⚠️  You have uncommitted changes"
    echo "📋 Uncommitted files:"
    git status --porcelain
    echo ""
    read -p "Do you want to commit these changes? (y/n): " commit_changes
    
    if [ "$commit_changes" = "y" ] || [ "$commit_changes" = "Y" ]; then
        read -p "Enter commit message: " commit_message
        git add .
        git commit -m "$commit_message"
        echo "✅ Changes committed"
    else
        echo "❌ Cannot deploy with uncommitted changes"
        exit 1
    fi
fi

echo ""
echo "🚀 DEPLOYING TO NEW STAGING REPOSITORY..."
echo "========================================"

# Configure git with token temporarily
git remote set-url origin https://$github_username:$github_token@github.com/$github_username/$repo_name.git

# Push to repository (triggers Vercel deployment)
echo "📤 Pushing to GitHub repository..."
git push origin $current_branch

if [ $? -eq 0 ]; then
    echo ""
    echo "✅ DEPLOYMENT TO NEW STAGING SUCCESSFUL!"
    echo "======================================="
    echo ""
    echo "🎉 Your fresh staging environment is being deployed!"
    echo "📁 Repository: https://github.com/$github_username/$repo_name"
    echo "⏱️  Vercel deployment usually takes 2-3 minutes"
    echo ""
    echo "📋 Next steps:"
    echo ""
    echo "1. 🌐 Get your staging URL from Vercel dashboard"
    echo "2. 🔐 Update Google OAuth client with the new URL:"
    echo "   - Add JavaScript origin: https://[new-staging-url]"
    echo "   - Add redirect URI: https://[new-staging-url]/api/auth/callback/google"
    echo ""
    echo "3. 🗄️  Set up database schema:"
    echo "   - Run: NEW_STAGING_DATABASE_URL=\"your-url\" node setup-new-staging-database.js"
    echo ""
    echo "4. 🧪 Test your new staging environment:"
    echo "   - Visit the new staging URL"
    echo "   - Test Google OAuth sign-in"
    echo "   - Create a test family"
    echo "   - Verify all features work"
    echo ""
    echo "5. 🔄 Set up development workflow:"
    echo "   - Work in this repository for staging changes"
    echo "   - Sync with production repository as needed"
    echo ""
    echo "🎯 Benefits of your new setup:"
    echo "   ✅ Complete independence from production"
    echo "   ✅ No Vercel branch restrictions"
    echo "   ✅ Fresh database with proper schema"
    echo "   ✅ New OAuth client with correct URLs"
    echo "   ✅ Clean git history and configuration"
    echo "   ✅ Full control over staging environment"
    echo ""
else
    echo ""
    echo "❌ DEPLOYMENT FAILED"
    echo "Check the error messages above"
    echo ""
    echo "💡 Common issues:"
    echo "   - Invalid GitHub token"
    echo "   - Repository doesn't exist"
    echo "   - Network connectivity"
    echo "   - Repository permissions"
fi

# Reset git remote for security
git remote set-url origin https://github.com/$github_username/$repo_name.git
echo "🔐 Git remote URL reset for security"

echo ""
echo "🏁 New repository staging deployment completed"
